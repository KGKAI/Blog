# 贪心

答案字符串最多一个既不是'a'也不是'z'的字符，先初始化答案数组全为'a'，然后倒序遍历，如果d = k - n d > 25, 则该位置的字符修正为'z'。

* C[]

```C[]
char * getSmallestString(int n, int k){
    int d;
    char *ans = malloc((n + 1) * sizeof(char));
    
    memset(ans, 'a', n);
    ans[n] = '\0';
    for (d = k - n; d > 25; d = d - 25)
        ans[--n] = 'z';
    ans[--n] = 'a' + d;

    return ans;
}
```

# 二分 +贪心

从'a'到'z'遍历26个字符，得到每一个字符最多出现几次，然后组合起来即可。

* C[]

```C[]
int bserach(int v, int n, int k)
{
    int mid, l = 0, r = n;

    while (l < r) {
        mid = l + r + 1 >> 1;
        if (k - mid * v <= (n - mid) * 26)
            l = mid;
        else 
            r = mid - 1;
    }
    return l;
}

char * getSmallestString(int n, int k) {
    int i, j, idx = 0, small = 0;
    char *ans = malloc((n + 1) * sizeof(char));

    for (i = 1; i <= 26 && n; i++) {
        small = bserach(i, n, k);
        if (small) {
            for (j = 0; j < small; j++)
                ans[idx++] = 'a' + i - 1; 
        }
        n = n - small;
        k = k - small * i;
    }
    ans[idx] = '\0';
    return ans;
}
```

