/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var threeSum = function(nums) {
    const res = []
    nums.sort((a, b) => a - b)
    for (let i = 0; i < nums.length; i++) {
        while (nums[i] === nums[i - 1]) i++
        const target = 0 - nums[i]
        let l = i + 1, r = nums.length - 1
        while (l < r) {
            if (nums[l] + nums[r] === target) {
                res.push([nums[i], nums[l], nums[r]])
                while (nums[l] === nums[l + 1]) l++
                while (nums[r] === nums[r - 1]) r--
                l++
                r--
            } else if (nums[l] + nums[r] > target) {
                r--
            } else {
                l++
            }
        }
    }
    return res
};
//runtime:175 ms
//memory:64.6 MB
