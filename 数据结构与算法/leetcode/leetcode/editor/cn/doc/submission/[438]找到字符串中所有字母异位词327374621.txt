/**
 * @param {string} s
 * @param {string} p
 * @return {number[]}
 */
var findAnagrams = function(s, p) {
    let left = 0, right = 0;
    const window = {}, need = {};
    for (const c of p) {
        need[c] = (need[c] || 0) + 1
    }

    const count = Object.keys(need).length;
    let match = 0;
    const res = []
    while (right < s.length) {
        const c = s[right];
        right++;
        window[c] = (window[c] || 0) + 1;
        if (window[c] === need[c]) match++;
        while(match === count) {
            if (right - left === p.length) {
                res.push(left)
            }
            const lc = s[left];
            if (window[lc] === need[lc]) {
                match--;
            }
            left++;
            window[lc]--;
        }
    }

    return res;
};
//runtime:92 ms
//memory:43.7 MB
